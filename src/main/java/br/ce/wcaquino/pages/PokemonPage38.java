package br.ce.wcaquino.pages;

import static br.ce.wcaquino.core.DriverFactory.getDriver;

import java.util.concurrent.TimeUnit;

import org.junit.Assert;

import br.ce.wcaquino.core.BasePage;

public class PokemonPage38 extends BasePage {

	public void verDetalhes741() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnOricorio-baile");
		Assert.assertEquals("ORICORIO-BAILE", obterTexto("741"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes742() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnCutiefly");
		Assert.assertEquals("CUTIEFLY", obterTexto("742"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes743() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnRibombee");
		Assert.assertEquals("RIBOMBEE", obterTexto("743"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes744() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnRockruff");
		Assert.assertEquals("ROCKRUFF", obterTexto("744"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes745() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnLycanroc-midday");
		Assert.assertEquals("LYCANROC-MIDDAY", obterTexto("745"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes746() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnWishiwashi-solo");
		Assert.assertEquals("WISHIWASHI-SOLO", obterTexto("746"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes747() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnMareanie");
		Assert.assertEquals("MAREANIE", obterTexto("747"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes748() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnToxapex");
		Assert.assertEquals("TOXAPEX", obterTexto("748"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes749() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnMudbray");
		Assert.assertEquals("MUDBRAY", obterTexto("749"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes750() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnMudsdale");
		Assert.assertEquals("MUDSDALE", obterTexto("750"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes751() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnDewpider");
		Assert.assertEquals("DEWPIDER", obterTexto("751"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes752() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnAraquanid");
		Assert.assertEquals("ARAQUANID", obterTexto("752"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes753() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnFomantis");
		Assert.assertEquals("FOMANTIS", obterTexto("753"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes754() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnLurantis");
		Assert.assertEquals("LURANTIS", obterTexto("754"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes755() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnMorelull");
		Assert.assertEquals("MORELULL", obterTexto("755"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes756() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnShiinotic");
		Assert.assertEquals("SHIINOTIC", obterTexto("756"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes757() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnSalandit");
		Assert.assertEquals("SALANDIT", obterTexto("757"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes758() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnSalazzle");
		Assert.assertEquals("SALAZZLE", obterTexto("758"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes759() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnStufful");
		Assert.assertEquals("STUFFUL", obterTexto("759"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}
	
	public void verDetalhes760() throws InterruptedException {
		getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("next");
		clicarBotao("btnBewear");
		Assert.assertEquals("BEWEAR", obterTexto("760"));
		getDriver().manage().timeouts().implicitlyWait(0, TimeUnit.SECONDS);

	}

}
